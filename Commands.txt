##########################
# Building on Windows x64
##########################
- Open Terminal Shell (PowerShell):
    terminal
    d:
- Start the Build Environment:
    docker run --rm -it -v d:\GitHub\SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/clean.sh
    docker run --rm -it -v d:\GitHub\SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/build.sh
- Write the final FAT12 image to a virtual disk (on Windows): http://www.chrysocome.net/dd
    ./dd.exe if=d:\github\sqlpassion\osdev\main64\kaos64.img of=d:\HDD-flat.vmdk
- Everything in one command:
    clear; docker run --rm -it -v d:\GitHub\SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/clean.sh; docker run --rm -it -v d:\GitHub\SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/build.sh; ./dd.exe if=d:\github\sqlpassion\osdev\main64\kaos64.img of=d:\HDD-flat.vmdk
- Write the Virtual Disk back to a FAT12 image
    ./dd.exe if=d:\HDD-flat.vmdk of=d:\kaos64.ima bs=512 count=2880

##########################
# Building on Windows ARM
##########################
- Start WSL2 on the command line:
    wsl
- Start Docker inside WSL2:
    sudo service docker Start
- Start the Build Environment:
    sudo docker run --rm -it -v /mnt/c/Users/klaus/documents/github/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/clean.sh
    sudo docker run --rm -it -v /mnt/c/Users/klaus/documents/github/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/build.sh
- Build the final image on the Windows ARM command line
    fatgen.bat
- Execute
    bochsrc.bxrc

#####################
# Building on Mac OS
#####################
- Open Terminal:
    docker run --rm -it -v $HOME/dev/GitHub/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/clean.sh
    docker run --rm -it -v $HOME/dev/GitHub/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/build.sh
- Write the final FAT12 image to a .qcow2 file for UTM (Apple Silicon):
    qemu-img convert -O qcow2 kaos64.img kaos64.qcow2
    cp kaos64.qcow2 "$HOME/Library/Containers/com.utmapp.UTM/Data/Documents/KAOS x64.utm/Data/kaos64.qcow2"
- Everything in one command (Apple Silicon):
    clear && docker run --rm -it -v $HOME/dev/GitHub/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/clean.sh && docker run --rm -it -v $HOME/dev/GitHub/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/build.sh && qemu-img convert -O qcow2 kaos64.img kaos64.qcow2 && cp kaos64.qcow2 "$HOME/Library/Containers/com.utmapp.UTM/Data/Documents/KAOS x64.utm/Data/kaos64.qcow2"
- Run with qemu
    qemu-system-x86_64 -drive format=raw,file=kaos64.img
    
- Write the final FAT12 image to a virtual disk (Intel):
    dd if="$HOME/dev/GitHub/SQLpassion/osdev/main64/kaos64.img" of="$HOME/dev/Virtual Machines/KAOS.vmwarevm/Virtual Disk-flat.vmdk" conv=notrunc
- Everything in one command (Intel):
    clear && docker run --rm -it -v $HOME/dev/GitHub/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/clean.sh && docker run --rm -it -v $HOME/Documents/GitHub/SQLpassion/osdev:/src sqlpassion/kaos-buildenv /bin/sh /src/main64/build.sh && dd if="$HOME/Documents/GitHub/SQLpassion/osdev/main64/kaos64.img" of="$HOME/Documents/Virtual Machines/KAOS.vmwarevm/Virtual Disk-flat.vmdk" conv=notrunc

###########################
# Run on physical Notebook
###########################
- Write the final FAT12 image to a physical disk:
    Mac:
        ls /dev/d*
        sudo dd if=kaos64.img of=/dev/disk4 (where /dev/disk4 is the attached physical hard disk!)
    Windows:
        wmic diskdrive list brief
        ./dd.exe if=d:\github\sqlpassion\osdev\main64\kaos64.img of=\\.\PhysicalDrive2 (where \\.\PhysicalDrive2 is the attached physical hard disk!)
        ./dd.exe if=\\.\PhysicalDrive2 of=d:\kaos64.ima bs=512 count=2880

#####################
# Debugging with GDB
#####################
- Run the following commands in osdev/main:
    qemu-system-x86_64 -drive format=raw,file=kaos64.img -s -S
    x86_64-elf-gdb -tui
- break PrintRootDirectory
- break shell_cls

###############
# Git Commands
###############

# Merge feature branch into main:
git checkout main
git merge --no-ff MyFeatureBranch
git push origin main

# Delete branch locally and remote:
git branch -d MyFeatureBranch
git push origin --delete MyFeatureBranch

# Tag the current state, and push it to the remote repository
git tag MyTagName main
git push origin MyTagName 